---
export interface Props {
  label?: string;
  placeholder?: string;
  icon?: string;
  iconAlt?: string;
  name?: string;
  id?: string;
  accept?: string;
  required?: boolean;
  disabled?: boolean;
  error?: string;
  class?: string;
  maxSize?: number; // in MB
  allowedTypes?: string[];
}

const {
  label,
  placeholder = "Choose file or drag and drop",
  icon = "gallery",
  iconAlt = "Upload",
  name,
  id,
  accept = "image/*",
  required = false,
  disabled = false,
  error,
  class: className = "",
  maxSize = 5, // 5MB default
  allowedTypes = ["image/jpeg", "image/png", "image/gif", "image/webp"],
  ...rest
} = Astro.props;

const uploadId =
  id || name || `upload-${Math.random().toString(36).substr(2, 9)}`;
const hasError = !!error;
---

<div class={`flex flex-col gap-2 md:gap-3 lg:gap-4 w-full ${className}`}>
  {
    label && (
      <label
        for={uploadId}
        class="capitalize font-medium text-gray text-sm md:text-base lg:text-base leading-tight"
      >
        {label}
        {required && <span class="text-red">*</span>}
      </label>
    )
  }

  <div
    class={`
    bg-[#f6f6f6] border-2 border-dashed border-transparent rounded-full
    flex items-center gap-2 md:gap-3 lg:gap-2 p-4 md:p-6 lg:p-6
    transition-all duration-300 ease-in-out
    ${
      hasError
        ? "border-red bg-red/5"
        : "hover:border-blue/30 focus-within:border-blue focus-within:bg-blue/5"
    }
    ${disabled ? "opacity-50 cursor-not-allowed" : "cursor-pointer"}
  `}
  >
    <div class="flex-shrink-0 w-6 h-6 md:w-8 md:h-8 lg:w-8 lg:h-8">
      <img
        src={`${import.meta.env.ICONS_FOLDER}/${icon}.svg`}
        alt={iconAlt}
        class="w-full h-full object-contain"
      />
    </div>

    <div class="flex-1 flex flex-col">
      <span
        class="font-semibold text-black whitespace-nowrap overflow-hidden text-ellipsis max-w-[250px] md:max-w-[300px] lg:max-w-[350px] text-base md:text-lg lg:text-lg leading-tight"
      >
        <span id={`${uploadId}-filename`}>{placeholder}</span>
      </span>
    </div>

    <span
      class="font-semibold hidden md:block text-black text-base md:text-lg lg:text-lg leading-tight"
    >
      Browse file
    </span>

    <input
      type="file"
      id={uploadId}
      name={name}
      accept={accept}
      required={required}
      disabled={disabled}
      class="hidden"
      data-max-size={maxSize}
      data-allowed-types={JSON.stringify(allowedTypes)}
      {...rest}
    />
  </div>

  {
    error && (
      <p class="text-red text-sm md:text-base lg:text-base font-medium leading-tight">
        {error}
      </p>
    )
  }
</div>


